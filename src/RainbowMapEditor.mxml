<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1200"
					   height="800"
					   backgroundColor="0x666666"
					   showStatusBar="false"
					   backgroundAlpha="0"
					   frameRate="60"
					   creationComplete="init()"
					   xmlns:components="com.xskip.rainbow.editor.components.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:XMLList id="myXMLListMenuBar"
					xmlns="">
			<menuitem id="menu1"
					  label="文件(F)">
				<menuitem id="SubMenu1_1"
						  label="新建(N)"
						  type="normal"
						  data="SubMenu1_1"/>
				<menuitem id="SubMenu1_2"
						  label="打开(O)"
						  type="normal"
						  data="SubMenu1_2"/>
				<menuitem type="separator"/>
				<menuitem id="SubMenu1_3"
						  label="保存(S)"
						  type="normal"
						  data="SubMenu1_3"/>
				<menuitem type="separator"/>
				<menuitem id="SubMenu1_4"
						  label="退出(X)"
						  type="normal"
						  data="SubMenu1_4"/>
			</menuitem>
			<menuitem id="menu2"
					  label="编辑(E)">
				<menuitem id="SubMenu2_1"
						  label="撤销(Z)	ctrl+z"
						  type="radio"
						  groupName="two"/>
				<menuitem id="SubMenu2_2"
						  label="访问(L)"
						  type="radio"
						  groupName="two"/>
				<menuitem id="SubMenu2_3"
						  label="关于(A)"
						  type="radio"
						  groupName="two"/>
			</menuitem>
			<menuitem id="menu3"
					  label="窗口(W)">
				<menuitem id="SubMenu3_0"
						  label="当前图案"
						  type="normal"
						  data="SubMenu3_0"/>
				<menuitem id="SubMenu3_1"
						  label="全局(G)"
						  type="check"
						  toggled="false"/>
				<menuitem id="SubMenu3_2"
						  label="层级(L)"
						  type="check"
						  toggled="true"/>
				<menuitem id="SubMenu3_3"
						  label="事件(E)"
						  type="check"
						  toggled="true"/>
				<menuitem id="SubMenu3_4"
						  label="素材(L)"
						  type="check"
						  toggled="true"/>
				<menuitem type="separator"/>
				<menuitem id="SubMenu3_5"
						  label="重置布局(R)"
						  type="normal"/>
				<menuitem type="separator"/>
				<menuitem id="SubMenu3_6"
						  label="显示数据(D)"
						  type="normal"/>
			</menuitem>
			<menuitem id="menu4"
					  label="运行(R)">
				<menuitem id="SubMenu4_1"
						  label="预览(V)"
						  type="normal"/>
				<menuitem id="SubMenu4_2"
						  label="调试(D)"
						  type="normal"/>
				<menuitem type="separator"/>
				<menuitem id="SubMenu4_1"
						  label="运行(R)"
						  type="normal"/>
			</menuitem>
			<menuitem id="menu5"
					  label="帮助(H)">
				<menuitem id="SubMenu5_1"
						  label="手册(G)"
						  type="radio"
						  groupName="five"/>
				<menuitem id="SubMenu5_2"
						  label="访问(L)"
						  type="radio"
						  groupName="five">
					<menuitem id="SubMenu5_2_1"
							  label="官网(H)"
							  type="radio"
							  groupName="five"
							  data="SubMenu5_2_1"/>
					<menuitem id="SubMenu5_2_2"
							  label="反馈(F)"
							  type="radio"
							  groupName="five"
							  data="SubMenu5_2_2"/>
				</menuitem>
				<menuitem id="SubMenu5_3"
						  label="关于(A)"
						  type="radio"
						  groupName="five"/>
			</menuitem>
		</fx:XMLList>

	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.xskip.rainbow.editor.components.ViewAsset;
			import com.xskip.rainbow.editor.components.ViewLayer;
			import com.xskip.rainbow.editor.components.WinImageView;
			import com.xskip.rainbow.editor.data.GlobalData;
			import com.xskip.rainbow.editor.event.EventCenter;
			import com.xskip.rainbow.editor.event.JEvent;
			import com.xskip.rainbow.editor.map.MainStarling;
			import com.xskip.rainbow.editor.windows.WinNewProject;
			import com.xskip.utils.HashMap;
			
			import mx.controls.Alert;
			import mx.events.MenuEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.Image;
			
			import starling.core.Starling;
			import starling.display.Sprite;

			public var _CreateNewProject:WinNewProject;

			public var _winImageView:WinImageView;

			public var _starling:Starling;


			private var _commViewLayer01:ViewLayer;
			private var _commViewLayer02:ViewLayer;
			private var _commViewLayer03:ViewLayer;
			private var _commViewLayer04:ViewLayer;
			private var _commViewLayer05:ViewLayer;
			private var _commViewLayer06:ViewLayer;
			private var _commViewLayer07:ViewLayer;
			private var _commViewLayer08:ViewLayer;
			private var _commViewLayer09:ViewLayer;
			private var _commViewLayer10:ViewLayer;
			private var _commViewLayer11:ViewLayer;

			private var _viewAsset:ViewAsset;

			private var _hashMapViewLayer:HashMap;

			private function init():void
			{
				if (stage)
				{
					start();
				}
				else
				{
					addEventListener(Event.ADDED_TO_STAGE, start);
				}
			}

			private function start(e:Event=null):void
			{
				if (hasEventListener(Event.ADDED_TO_STAGE))
				{
					removeEventListener(Event.ADDED_TO_STAGE, start);
				}

				stage.scaleMode=StageScaleMode.NO_SCALE;
				stage.align=StageAlign.TOP_LEFT;

				GlobalData.STAGE=stage;

				trace("game init");
				_CreateNewProject=new WinNewProject();
				_CreateNewProject.addEventListener(Event.REMOVED, onCloseHandler);
			}

			private function startStarling():void
			{

				var fRectangle:Rectangle=new Rectangle(10, 40, GlobalData.WIDTH_SCREEN_PIXEL, GlobalData.HEIGHT_SCREEN_PIXEL);

				//_starling.stage.bounds=fRectangle;

				_starling=new Starling(MainStarling, GlobalData.STAGE, fRectangle);
				_starling.antiAliasing=2;
				_starling.enableErrorChecking=false;
				_starling.showStats=true;

				GlobalData.WORLD=_starling;

				_starling.stage.color=0x333333;

				_starling.start();

			}

			private function onCloseHandler(e:Event):void
			{
				if (e.target == _CreateNewProject)
				{
					trace("_CreateNewProject onCloseHandler");
					if (GlobalData.DATA_READY)
					{
						updateData();
					}
				}
			}

			private function updateData():void
			{
				this.input_tile_number_width.text=String(GlobalData.WIDTH_TILE_NUMBER);
				this.input_tile_number_height.text=String(GlobalData.HEIGHT_TILE_NUMBER);

				this.input_view_width.text=String(GlobalData.WIDTH_SCREEN_PIXEL);
				this.input_view_height.text=String(GlobalData.HEIGHT_SCREEN_PIXEL);

				this.input_tile_pixel_width.text=String(GlobalData.WIDTH_TILE_PIXEL);
				this.input_tile_pixel_height.text=String(GlobalData.HEIGHT_TILE_PIXEL);


				//_starling.stage.width = GlobalData.WIDTH_SCREEN_PIXEL;
				//_starling.stage.height = GlobalData.HEIGHT_SCREEN_PIXEL;


				initComm();

				startStarling();

				trace("_starling.stage = " + _starling.stage);




			}

			private function initComm():void
			{
				_hashMapViewLayer=new HashMap();

				
				//添加素材预览层
				_winImageView=new WinImageView();
				_groupImage.addElement(_winImageView);
				
				
				//添加素材
				_viewAsset=new ViewAsset();
				_viewAsset.regImage(Image(_winImageView.image_view));
				_viewAsset.height=layer_LAYER_ASSET.height;
				layer_LAYER_ASSET.addElement(_viewAsset);
				
				//添加素材管理
				createViewLayer(_commViewLayer01, 10, "远背景", GlobalData.LAYER_BACKGROUND);
				createViewLayer(_commViewLayer02, 9, "背景卷轴1", GlobalData.LAYER_BACKGROUND_SCROLL_01);
				createViewLayer(_commViewLayer03, 8, "背景卷轴2", GlobalData.LAYER_BACKGROUND_SCROLL_02);
				createViewLayer(_commViewLayer04, 7, "地面背景", GlobalData.LAYER_FLOOR_BACKGROUND);
				createViewLayer(_commViewLayer05, 6, "地面背景修饰", GlobalData.LAYER_FLOOR_GARDEN);
				createViewLayer(_commViewLayer06, 5, "地面", GlobalData.LAYER_FLOOR);
				createViewLayer(_commViewLayer07, 4, "地面热区", GlobalData.LAYER_HOT_FLOOR);
				createViewLayer(_commViewLayer08, 3, "楼梯", GlobalData.LAYER_LADDER);
				createViewLayer(_commViewLayer09, 2, "楼梯热区", GlobalData.LAYER_HOT_LADDER);
				createViewLayer(_commViewLayer10, 1, "事件热区", GlobalData.LAYER_HOT_EVENT);
				createViewLayer(_commViewLayer11, 0, "网格层", GlobalData.LAYER_TILE_CELL);



			}

			private function createViewLayer(pViewLayer:ViewLayer, pI:int=0, pLabel:String="", strKey:String=""):void
			{
				var fFixX:int=4;
				var fFixY:int=4;

				pViewLayer=new ViewLayer();
				pViewLayer.x=fFixX;
				pViewLayer.y=fFixY + (pViewLayer.height + fFixY) * pI;
				pViewLayer.start(pLabel, strKey, viewLayerCallBack);
				layer_LAYER_TILE_CELL.addElement(pViewLayer);

				_hashMapViewLayer.put(strKey, pViewLayer);

				//默认选中 【地面】层
				if (strKey == GlobalData.LAYER_FLOOR)
				{
					pViewLayer.selectEdit(true);
					layer_LAYER_TILE_CELL.label="图层" + "【" + pViewLayer.layerName.label + "】";
				}
			}


			/*public function viewAssetCallBack(type:String,bitmap:Bitmap=null):void{
				if (type==""){

					return;
				}
			}*/

			public function viewLayerCallBack(pStrKey:String="", pType:String=""):void
			{

				var fViewLayer:ViewLayer=ViewLayer(_hashMapViewLayer.getValue(pStrKey));

				/*if (pType=="show"){
					//TODO 显示层
					//Starling.show
					Sprite(GlobalData.DISPLAY_ALL_SPRITE.getValue(pStrKey)).visible=true;
					return;
				}

				if (pType=="hide"){
					//TODO 显示层
					//Starling.show
					Sprite(GlobalData.DISPLAY_ALL_SPRITE.getValue(pStrKey)).visible=false;
					return;
				}*/



				if (pType == "edit")
				{
					var fLength:int=_hashMapViewLayer.size();

					for (var i:int=0; i < fLength; i++)
					{
						ViewLayer(_hashMapViewLayer.values()[i]).selectEdit(false);
					}
					fViewLayer.selectEdit(true);
					layer_LAYER_TILE_CELL.label="图层" + "【" + fViewLayer.layerName.label + "】";
				}
			}

			protected function menuBar_ClickHandler(event:MenuEvent):void
			{
				// TODO Auto-generated method stub
				var fData:String=String(event.item.@data);
				//Alert.show("event.item.@data " + fData);

				switch (fData)
				{
					case "SubMenu1_1":
						if (GlobalData.DATA_READY)
						{
							//TODO
							Alert.show("请先保存您的应用");
							return;
						}
						PopUpManager.addPopUp(_CreateNewProject, this, true);
						//fCreateNewProject.visible = true;
						break;
					case "SubMenu3_0":
						break;
					case "SubMenu5_2_1":
						var fRequest5_2_1:URLRequest=new URLRequest("http://www.sina.com");
						navigateToURL(fRequest5_2_1);
						break;
					case "SubMenu5_2_2":
						var fRequest5_2_2:URLRequest=new URLRequest("http://www.sohu.com");
						navigateToURL(fRequest5_2_2);
						break;
					default:

				}
			}
		]]>
	</fx:Script>

	<!-- 组建 begin -->
	<mx:MenuBar x="0"
				y="0"
				width="100%"
				id="_menuBar"
				height="30"
				dataProvider="{myXMLListMenuBar}"
				labelField="@label"
				itemClick="menuBar_ClickHandler(event)">

	</mx:MenuBar>
	<!--图片预览区域-->
	<s:Group id="_groupImage" width="200" height="200" right="0" top="30">
		<s:Rect x="0" y="0" height="100%" width="100%">
			<s:fill>
				<s:LinearGradient rotation="250">
					<s:GradientEntry color="#FFFFFF" ratio="0"/>
					<s:GradientEntry color="#FFFFFF" ratio="1"/>
				</s:LinearGradient> 
			</s:fill>
		</s:Rect>
	</s:Group>
	<mx:Accordion width="200"
				  height="100%"
				  right="0"
				  top="230"
				  headerHeight="40">
		<s:NavigatorContent label="全局参数"
							width="100%"
							height="100%">
			<s:TextInput id="input_tile_number_width"
						 x="90"
						 y="10"
						 width="40"
						 text="0"
						 restrict="0-9\."/>
			<s:TextInput id="input_tile_number_height"
						 x="150"
						 y="10"
						 width="40"
						 text="0"
						 restrict="0-9\."/>
			<s:Label x="12"
					 y="15"
					 text="网格数量"/>
			<s:TextInput id="input_view_width"
						 x="90"
						 y="40"
						 width="40"
						 text="800"
						 restrict="0-9\."/>
			<s:TextInput id="input_view_height"
						 x="150"
						 y="40"
						 width="40"
						 text="600"
						 restrict="0-9\."/>
			<s:Label x="12"
					 y="45"
					 text="显示域"/>
			<s:TextInput id="input_tile_pixel_width"
						 x="90"
						 y="70"
						 width="40"
						 text="32"
						 restrict="0-9\."/>
			<s:TextInput id="input_tile_pixel_height"
						 x="150"
						 y="70"
						 width="40"
						 text="32"
						 restrict="0-9\."/>
			<s:Label x="12"
					 y="75"
					 text="单网格"/>
			<s:Button x="90"
					  y="100"
					  label="更  新"
					  width="98"
					  height="30"/>
		</s:NavigatorContent>
		<s:NavigatorContent id="layer_LAYER_TILE_CELL"
							label="层级"
							width="100%"
							height="100%">
		</s:NavigatorContent>
		<s:NavigatorContent label="事件"
							width="100%"
							height="100%">
		</s:NavigatorContent>
		<s:NavigatorContent id="layer_LAYER_ASSET"
							label="素材"
							width="100%"
							height="100%">
		</s:NavigatorContent>
	</mx:Accordion>
	<!-- 组建 end -->
</s:WindowedApplication>
